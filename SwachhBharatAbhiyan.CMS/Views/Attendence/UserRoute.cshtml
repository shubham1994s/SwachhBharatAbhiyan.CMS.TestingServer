
@{
    Layout = null;
}
<style>
    /* Always set the map height explicitly to define the size of the div
           * element that contains the map. */
    #googleMap {
        height: 100%;
    }
    /* Optional: Makes the sample page fill the window. */
    html, body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #floating-panel {
        position: absolute;
        top: 0px;
        left: 5%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
    }

    #play_id {
        left: 87%;
    }

    @@media only screen and (max-width: 1240px) {
        #play_id {
            left: 74%;
        }
    }

    @@media only screen and (max-width: 991px) {
        #play_id {
            left: 72%;
        }
    }

    @@media only screen and (max-width: 600px) {
        #play_id {
            left: 70%;
        }
    }

    @@media only screen and (max-width: 500px) {
        #play_id {
            left: 68%;
        }
    }

    @@media only screen and (max-width: 400px) and (min-width:300px) {
        #play_id {
            left: 64%;
        }
    }

    /*@@media only screen and (max-width: 1044px) and (min-width:850px) {
      #play_id {
         left: 65%;
      }
    }
            @@media only screen and (max-width: 849px) and (min-width:421px) {
      #play_id {
         left: 65%;
      }
    }
            @@media only screen and (max-width: 420px) {
      #play_id {
         left: 60%;
      }
    }
              @@media only screen and (max-width: 300px) {
      #play_id {
         left: 55%;
      }
    }*/

    #floating-panel {
        margin-left: -10px;
    }
</style>


    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
@*<link href="~/Content/css/datepicker/css/datepicker.css" rel="stylesheet" />*@
<link href="~/Content/Custom/fontawesome/css/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/Custom/timepicker.css" rel="stylesheet" />



    <div class="container ">

        <div class="row" style="margin-top:5px">
            <div class="col-sm-1">

                <div id="floating-panel" style="display:inline-flex;width:auto;background:transparent;border:none">
                    <a style="margin-top:22px" class="btn btn-sm btn-success" href="/Attendence/Index">Back</a>
                </div>

            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    <label for="">From Time</label>
                    <div class="input-group time" id="timepicker">
                        <input autocomplete="off" class="form-control" id="fromtime" name="fromtime" placeholder="From Time" style="font-family:Arial, FontAwesome" type="text" value=""><span class="input-group-addon"><span class="fa fa-clock-o"></span></span>
                    </div>
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <span class="help-block with-errors"></span>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">

                    <label for="">To Time</label>
                    <div class="input-group time" id="timepickerrr">
                        <input autocomplete="off" class="form-control" id="totime" name="totime" placeholder="To Time" style="font-family:Arial, FontAwesome" type="text" value=""><span class="input-group-addon"><span class="fa fa-clock-o"></span></span>
                    </div>
                    
                    <span class="glyphicon form-control-feedback" aria-hidden="true"></span>
                    <span class="help-block with-errors"></span>
                </div>
            </div>

            <div class="col-sm-1">

                <div id="floating-panel" style="display:inline-flex;width:auto;background:transparent;border:none">
                    <a style="margin-top:22px" class="btn btn-sm btn-success"onclick="Search()">Search</a>
                </div>

            </div>
            <div class="col-sm-4">
                <br />
               <h4 class="text-danger" id="err_time"></h4> 

            </div>

        </div>
    </div>
<fieldset>

    <input type="hidden" value='@Request.QueryString["daId"]' id='HdnIndustries' />
    <input type="hidden" value='' id='route_date' />
    <input type="hidden" value='' id='userid' />
    <div class="container ">
        <div class="row">

            <div class="col-10 bg-white has-shadow" id="googleMap" style="width:auto; height:600px"></div>
            <div class="col-sm-2"></div>
        </div>
    </div>
    <script>
        var searchData = [];
        var isSearch = 0;
        function Search() {
          
                var from = document.getElementById("fromtime").value;
                var to = document.getElementById("totime").value;
                if (from == "" || to == "") {
                    $("#err_time").html("From Time and To time is required").delay(3000).show().fadeOut('slow');
                    return false;
                }
                var date = new Date();

                var day = date.getDate();
                var month = date.getMonth() + 1;
                var year = date.getFullYear();
                if (month < 10) month = "0" + month;
                if (day < 10) day = "0" + day;
                var today = year + "/" + month + "/" + day
          
                var fromdt = today + " " + from;
                var todt = today + " " + to;
                var fromdate = new Date(Date.parse(fromdt));
                var todate = new Date(Date.parse(todt));
                //debugger;
                if (fromdate > todate) {
                    $("#err_time").html("To Time should be greater than from time").delay(3000).show().fadeOut('slow');
                    return false;
                }
                
              
           
            $.ajax({
                type: "post",
                url: "/Attendence/UserTimeWiseRouteData?date=" + $('#route_date').val() + "&fTime=" + $("#fromtime").val() + "&tTime=" + $("#totime").val() + "&userId=" + $("#userid").val(),
                //url: "/Location/HouseLocationList",
                datatype: "json",
                traditional: true,
                success: function (data) {
                  
                    if (data.length == 0) {
                        alert("No Record Found for selected time intervals");
                        return false;
                    }
                    if (data.length > 0) {
                        isSearch = 1;
                        searchData = data;
                    }
                   
                    myMap()
                }
            });
        }
        function myMap() {



            function CenterControl(controlDiv, map) {

                // Set CSS for the control border.
                var controlUI = document.createElement('div');

                controlUI.style.cursor = 'pointer';
                controlUI.style.marginBottom = '22px';
                controlUI.style.marginTop = '5px';
                // controlUI.style.textAlign = 'center';
                controlDiv.appendChild(controlUI);

                // Set CSS for the control interior.
                var controlText = document.createElement('div');
                controlText.style.color = '#fff';
                controlText.innerHTML = 'Play';
                controlText.id = "play";
                controlText.className = 'test btn btn-sm btn-success';
                controlUI.appendChild(controlText);

                // Setup the click event listeners: simply set the map to Chicago.

            }

            function CenterControlPause(controlDivPause, map) {

                // Set CSS for the control border.
                var controlUIPause = document.createElement('div');

                controlUIPause.style.cursor = 'pointer';
                controlUIPause.style.marginBottom = '22px';
                controlUIPause.style.marginTop = '5px';
                // controlUI.style.textAlign = 'center';
                controlDivPause.appendChild(controlUIPause);

                // Set CSS for the control interior.
                var controlTextPause = document.createElement('div');
                controlTextPause.style.color = '#fff';
                controlTextPause.innerHTML = 'Pause';
                controlTextPause.id = "pause";
                controlTextPause.className = 'test btn btn-sm btn-success';
                controlUIPause.appendChild(controlTextPause);

                // Setup the click event listeners: simply set the map to Chicago.

            }



            var industries = $("#HdnIndustries").val();
            var geocoder = new google.maps.Geocoder();


            $.ajax({
                type: "post",
                url: "/Attendence/UserRouteData?daId=" + industries,
                datatype: "json",
                traditional: true,
                success: function (m) {
                   // alert(m[0].date);
                    $("#route_date").val(m[0].date);
                    $("#userid").val(m[0].userId);
                   
                    if(isSearch==1){
                        markers = searchData;
                    }
                    else {
                        markers = m;
                    }
                    var mapOptions = {
                        center: new google.maps.LatLng(markers[0].lat, markers[0].log),
                        zoom: 10,
                        mapTypeId: google.maps.MapTypeId.ROADMAP
                    };
                    var map = new google.maps.Map(document.getElementById("googleMap"), mapOptions);

                    var centerControlDiv = document.createElement('div');
                    var centerControlDivPause = document.createElement('div');
                    var centerControl = new CenterControl(centerControlDiv, map);
                    var centerControlPause = new CenterControlPause(centerControlDivPause, map);

                    centerControlDiv.index = 1;
                    centerControlDivPause.index = 1;
                    //centerControlDiv.style.left = '90%';
                    centerControlDiv.id = "play_id";
                    centerControlDivPause.style.left = '80%';
                    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(centerControlDiv);
                    map.controls[google.maps.ControlPosition.TOP_RIGHT].push(centerControlDivPause);

                    centerControlDiv.addEventListener('click', function () {
                        animateCircle(poly, 17);
                    });

                    centerControlDivPause.addEventListener('click', function () {
                        animateCircle(poly, 7);
                    });

                    var infoWindow = new google.maps.InfoWindow();
                    var lat_lng = new Array();
                    var latlngbounds = new google.maps.LatLngBounds();

                    for (i = 0; i < markers.length; i++) {



                        var data = markers[i]
                        var a = i + 1;
                        // Get Address from server
                        var myLatlng = new google.maps.LatLng(data.lat, data.log);
                        lat_lng.push(myLatlng);
                        var marker = new google.maps.Marker({
                            position: myLatlng,
                            map: map,
                            title: data.Username,
                            icon: 'http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + a + '|FF0000|000000'
                        });


                        latlngbounds.extend(marker.position);


                        if (data.type == 0) {

                            (function (marker, data) {
                                if (data.userMobile == null) {
                                    data.userMobile = '';
                                }
                                if (data.vehcileNumber == null) {
                                    data.vehcileNumber = '';
                                }
                                if (data.address == null) {
                                    data.address = '';
                                }
                                google.maps.event.addListener(marker, "click", function (e) {
                                    infoWindow.setContent('<div class=infowindow style="max-width:190px"> <h3>' + data.userName + '</h3><h5><b>Employee Details:</b></h5><p><b>Date:</b>' + data.date + '</p><p><b>Time:</b>' + data.time + '</p><p><b>Mobile:</b>' + data.userMobile + '<p><b>Vehicle No:</b>' + data.vehcileNumber + '</p><div style="height:auto; width:150px"><p><b>Address:</b>' + data.address + '</p></div></div>');
                                    infoWindow.open(map, marker);

                                    //animateCircle(poly,9);
                                });

                            })(marker, data);

                        }


                        //(function (marker, data) {

                        //    //google.maps.event.addListener(marker, "click", function (e) {
                        //    //    infoWindow.setContent('<div class=infowindow> <h3>' + data.userName + '</h3><h5><b>Details:</b></h5><p><b>Date:</b>' + data.date + '</p><p><b>Time:</b>' + data.time + '</p><p><b>Mobile:</b>' + data.userMobile + '<p><b>Vehcile No:</b>' + data.vehcileNumber + '</p><div style="height:auto; width:150px"><p><b>Address:</b>' + data.address + '</p></div></div>');
                        //    //    infoWindow.open(map, marker);


                        //    google.maps.event.addListener(marker, "click", function (e) {
                        //        infoWindow.setContent('<div class=infowindow> <h5><b>HouseDetails:</b></h5><p>House-Id:<b>' + data.HouseId + '</b></p><p>Name:<b>' + data.HouseOwnerName + '</b></p><p>MobileNo:<b>' + data.OwnerMobileNo + '</b></p><p>Date:<b>' + data.date + '</b></p><p>Time:<b>' + data.time + '</b></p><p>HouseAddress:<b>' + data.HouseAddress + '</b></p><hr><div><h5><b>EmpDetails:</b></h5><p>EmpName:<b>' + data.userName + '</b></p><p>Vehcile No:<b>' + data.vehcileNumber + '</b></p></div></div>');
                        //        infoWindow.open(map, marker);

                        //        //animateCircle(poly,9);
                        //    });

                        //})(marker, data);



                    }
                    map.setCenter(latlngbounds.getCenter());
                    map.fitBounds(latlngbounds);

                    //***********ROUTING****************//
                    var lineSymbol = {
                        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
                        scale: 5,
                        strokeColor: '#388e3c',
                    };

                    //Initialize the Path Array
                    var path = new google.maps.MVCArray();

                    //Initialize the Direction Service
                    var service = new google.maps.DirectionsService();

                    //Set the Path Stroke Color
                    var poly = new google.maps.Polyline({
                        strokeColor: '#4986E7',
                        strokeWeight: 5,
                        map: map, icons: [{
                            icon: lineSymbol,
                            offset: '100%',
                        }],
                    });
                    animateCircle(poly, 1);
                    var a = 0;
                    var listener;
                    function animateCircle(line, k) {

                        // alert(k);
                        if (k == 7) {
                            clearInterval(listener);
                            a = 0;
                        }
                        else {
                            a = a + 1;

                            if (a == 1) {
                                var count = 0;
                                listener = window.setInterval(function () {
                                    count = (count + 1) % 200;
                                    var icons = line.get('icons');
                                    icons[0].offset = (count / 2) + '%';
                                    line.set('icons', icons);
                                    if (count == 199) { clearInterval(listener); a = 0; };
                                }, 100);


                            }
                        }

                    }
                    //Loop and Draw Path Route between the Points on MAP
                    for (var i = 0; i < lat_lng.length; i++) {
                        if ((i + 1) <= lat_lng.length) {
                            var src = lat_lng[i];
                            var des = lat_lng[i + 1];
                            path.push(src);
                            poly.setPath(path);
                            service.route({
                                origin: src,
                                destination: des,
                                travelMode: google.maps.DirectionsTravelMode.DRIVING
                            }, function (result, status) {
                                if (status == google.maps.DirectionsStatus.OK) {
                                    for (var i = 0, len = result.routes[0].overview_path.length; i < len; i++) {
                                        path.push(result.routes[0].overview_path[i]);
                                    }
                                }
                            });
                        }
                    }
                }

            });

        }
    
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD6eobSmi6nEV2h0TkRolQ5x6JjShuaHEs&callback=myMap" type="text/javascript"></script>


    <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.14.1/moment.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js'></script>
    <script>
if (/Mobi/.test(navigator.userAgent)) {
  // if mobile device, use native pickers
  $(".date-time input").attr("type", "datetime-local");
  $(".date input").attr("type", "date");
  $(".time input").attr("type", "time");
} else {
  // if desktop device, use DateTimePicker
  $("#datetimepicker").datetimepicker({
    icons: {
      time: "fa fa-clock-o",
      date: "fa fa-calendar",
      up: "fa fa-chevron-up",
      down: "fa fa-chevron-down",
      next: "fa fa-chevron-right",
      previous: "fa fa-chevron-left" } });


  $("#datepicker").datetimepicker({
    useCurrent: false,
    format: "L",
    icons: {
      next: "fa fa-chevron-right",
      previous: "fa fa-chevron-left" } });


  $("#timepicker").datetimepicker({
    format: "LT",
    icons: {
      up: "fa fa-chevron-up",
      down: "fa fa-chevron-down"
    }
  });

  $("#timepickerrr").datetimepicker({
      format: "LT",
      icons: {
          up: "fa fa-chevron-up",
          down: "fa fa-chevron-down"
      }
  });


}
//# sourceURL=pen.js
    </script>

</fieldset>
<script src="~/Content/css/datepicker/js/datepicker.js"></script>
